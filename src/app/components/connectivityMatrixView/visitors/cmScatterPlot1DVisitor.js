/*global d3
 */

import {ScatterPlot1D} from "../svg/scatterPlot1D";

/**
 * Visitor to preprocess per-node attributes and find valueRange.
 * This finds the value range of all attribute cells.
 */
export class cmScatterPlot1DPreprocessor {
  constructor() {
    this.values = [];
  }

  apply(cell) {
    if (cell.isAttributeCell) {
      for (var i = 0; i < cell.data.values.length; ++i) {
        this.values.push(cell.data.values[i]);
      }
    }
  }

  getValueRange() {
    return [Math.min(d3.min(this.values), 0), d3.max(this.values)];
  }
}

/**
 * Visitor to create 1D scatterplots in per-node attribute cells.
 * valueRange should be generated by the proceprocessor.
 */
export class cmScatterPlot1DVisitor {
  constructor(radius, valueRange) {
    this.radius = radius;
    this.valueRange = valueRange;
  }

  apply(cell) {
    if (cell.isAttributeCell) {
      let data = cell.data;
      let group = cell.getGroup()
        .append("g");
      if (data.orientation == 1) {
        new ScatterPlot1D(group, 15, 80, this.radius, data.values, this.valueRange, data.orientation);
      } else {
        new ScatterPlot1D(group, 80, 15, this.radius, data.values, this.valueRange, data.orientation);
      }
    }
  }
}

